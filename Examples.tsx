import React from 'react';

const Examples: React.FC = () => {
  return (
    <div className="container mx-auto p-4">
      <h2 className="text-2xl font-semibold mb-3">大型语言模型在数学建模中的实际应用案例</h2>
      <p className="mb-4">
        为了更直观地展示大型语言模型（LLM）在数学建模过程中的辅助作用，本部分将介绍几个通俗易懂的实际应用案例。这些案例将覆盖从问题理解、模型构建、代码生成到结果解释等数学建模的关键环节，旨在阐明LLM如何作为一种强大的工具，与建模者协同工作，提升建模的效率和深度。
      </p>

      <h3 className="text-xl font-semibold mt-6 mb-2">案例一：共享单车调度优化（基础优化问题）</h3>
      <h4 className="text-lg font-semibold mb-1">1. 问题背景描述：</h4>
      <p className="mb-4">
        在一个现代化的城市中，共享单车服务为市民提供了便捷的出行选择。然而，由于用户骑行的潮汐效应和不均衡分布，常常导致一些热门区域的共享单车供不应求，用户难以找到可用车辆；而在另一些区域，单车则可能出现大量闲置，造成资源浪费。共享单车运营公司面临的挑战是，如何通过科学合理的车辆调度策略，在尽可能满足各停放点车辆需求的同时，最小化用户的平均等待时间以及公司的整体调度成本（这些成本通常包括调度车辆的燃油消耗、维护费用、以及调度人员的人力成本等）。
      </p>
      <h4 className="text-lg font-semibold mb-1">2. LLM在建模过程中的辅助角色与演示：</h4>
      <ul className="list-disc list-inside space-y-2 ml-4 mb-4">
        <li>
          <strong>辅助问题理解与需求澄清</strong>：
          <p className="mt-1">
            <strong>向LLM提问</strong>：“我正在着手解决一个关于城市共享单车调度优化的问题。核心目标是双重的：一是最小化用户的平均等待时间，二是最小化公司的总调度成本。您能帮我系统地梳理一下，在构建数学模型时，需要重点考虑哪些关键因素和变量吗？”<br />
            <strong>LLM可能的回答与启发性提示</strong>：LLM可能会迅速回应并提示一系列需要纳入考量的因素，例如：各个停放点当前的实时车辆保有量、基于历史数据和外部因素（如时间段、天气条件、是否节假日、周边活动等）预测的未来需求量、调度运输车辆的额定容量和可用数量、不同停放点之间的精确地理距离或实际运输时间、调度成本的具体构成（例如，是包含固定启动成本还是仅按里程计算的变动成本）、用户等待时间的合理度量方式（例如，是平均等待时长，还是超出特定阈值的用户比例）等。LLM甚至可能建议对问题进行更细致的界定，比如是否考虑多车型调度，或者是否需要满足某些服务水平协议（SLA）。
          </p>
        </li>
        <li>
          <strong>辅助模型框架构建与选择</strong>：
          <p className="mt-1">
            <strong>向LLM提问</strong>：“基于我们刚才讨论的这些复杂因素，我计划建立一个数学优化模型来解决这个问题。您能根据问题的性质，建议一个或几个比较合适的模型类型吗？比如，它更倾向于是线性规划（LP）、整数规划（IP）、混合整数规划（MIP），还是某种非线性规划（NLP）或者动态规划（DP）问题？”<br />
            <strong>LLM可能的回答与启发性建议</strong>：LLM可能会分析指出，由于问题涉及到最小化两个可能冲突的目标（用户等待时间和调度成本），这本质上是一个多目标优化问题。它可以建议几种处理多目标的方法，例如采用加权求和法将其转化为单目标问题（需要用户根据业务优先级设定权重），或者采用约束法（将一个目标作为约束，优化另一个目标）。同时，如果决策变量涉及到调度多少辆单车（这通常是整数），那么模型类型很可能是整数规划或混合整数规划问题。LLM还可能提及如果考虑时间动态性（如分时段调度），则可能需要更复杂的模型结构。<br />
            <strong>向LLM提问</strong>：“那么，请您帮我初步定义一下这个优化模型的核心组成部分：主要的决策变量应该是什么？目标函数可以如何具体表述？以及关键的约束条件有哪些？”<br />
            <strong>LLM可能的辅助输出（示例性）</strong>：
            <ul className="list-disc list-inside ml-4 mt-1">
              <li><strong>决策变量</strong>：例如，可以定义 <code>X_ijk</code> 为在某个调度周期内，从停放点 <code>i</code> 调运到停放点 <code>j</code> 的单车数量（如果考虑不同类型的调度车辆，还可以增加一个下标 <code>k</code> 代表使用的第 <code>k</code> 辆调度车，或者 <code>X_ij</code> 直接表示数量，调度车辆的选择是另一个决策）。</li>
              <li><strong>目标函数</strong>：例如，<code>Minimize (W1 * Σ(用户等待时间函数) + W2 * Σ(调度成本函数))</code>，其中 <code>W1</code> 和 <code>W2</code> 是用户设定的权重。用户等待时间函数可能与调度后各点车辆缺口有关，调度成本函数则与 <code>X_ijk</code> 和运输距离/时间有关。</li>
              <li><strong>约束条件</strong>：例如，流量平衡约束（每个停放点调度后的车辆数等于初始车辆数 + 调入数 - 调出数）；需求满足约束（调度后的车辆数需在预估需求量的一定浮动范围内，或者满足一个最低服务水平）；调度车辆容量约束（单次调度的车辆总数不能超过调度车的最大载量）；车辆来源约束（从一个停放点调出的车辆总数不能超过其当前可用车辆数）；决策变量非负整数约束等。</li>
            </ul>
          </p>
        </li>
        <li>
          <strong>辅助代码生成（例如使用Python及优化库如PuLP、OR-Tools、Gurobipy等）</strong>：
          <p className="mt-1">
            <strong>向LLM提问</strong>：“假设我已经基于您的建议，进一步明确了决策变量的具体定义、目标函数的精确数学表达式以及所有相关的约束条件（此时可以向LLM提供这些具体的数学公式）。您能帮我使用Python编程语言，并结合PuLP（或OR-Tools）这个开源优化库，生成一个解决此共享单车调度优化问题的基本代码框架吗？”<br />
            <strong>LLM可能的辅助输出</strong>：LLM能够生成一段结构化的Python代码。这段代码通常会包含：导入所需库（如<code>pulp</code>）；定义输入数据（例如，停放点列表、各点初始车辆数、需求预测矩阵、停放点间距离/成本矩阵、调度车容量等，这些数据可以先用占位符或示例数据）；使用库的API定义决策变量（例如，<code>LpVariable.dicts</code>）；根据提供的公式设置目标函数（<code>prob += lpSum(...)</code>）；逐条添加约束条件（<code>prob += lpSum(...) {'<='} ...</code>）；调用求解器求解模型（<code>prob.solve()</code>）；最后，打印求解状态和主要的求解结果（如各条调度路径上的车辆数量，以及最优的目标函数值）。
          </p>
        </li>
        <li>
          <strong>辅助结果解释与敏感性分析建议</strong>：
          <p className="mt-1">
            <strong>向LLM提问</strong>：“模型求解完成后，给出了一个具体的调度方案，比如说，结果显示建议从A停放点调拨50辆单车到B停放点，同时从C停放点调拨30辆单车到D停放点。这个调度方案在实际运营中具体意味着什么？我应该如何向没有技术背景的业务团队清晰地解释这个方案的合理性和潜在效益？”<br />
            <strong>LLM可能的回答与启发性分析</strong>：LLM可以帮助将技术性的模型输出（如变量值、目标值）转化为通俗易懂的商业语言。它可以解释该调度方案是如何在满足关键区域的用户需求和有效控制运营成本之间取得平衡的。此外，LLM还可能提示用户可以进一步进行哪些敏感性分析，例如，分析当用户需求预测发生一定程度的波动时，或者当调度成本（如油价）发生变化时，最优调度方案会如何改变，以及目标函数值的敏感程度如何，从而帮助决策者理解方案的鲁棒性。
          </p>
        </li>
      </ul>
      <h4 className="text-lg font-semibold mb-1">3. LLM在此案例中的核心价值体现：</h4>
      <ul className="list-disc list-inside ml-4 mb-4">
        <li><strong>快速梳理复杂问题</strong>：帮助用户从多角度审视问题，启发全面思考，避免遗漏关键因素。</li>
        <li><strong>辅助构建科学模型框架</strong>：基于问题特性建议合适的数学模型类型，并协助定义模型的关键构成要素（决策变量、目标函数、约束条件）。</li>
        <li><strong>高效生成初步求解代码</strong>：显著减少编写基础框架代码所需的时间和精力，使建模者能更专注于模型逻辑的正确性和数据的准确性。</li>
        <li><strong>促进模型结果的理解与沟通</strong>：帮助将专业的模型结果转化为易于理解的业务洞察，并为后续的模型验证和迭代提供分析思路。</li>
      </ul>

      <h3 className="text-xl font-semibold mt-6 mb-2">案例二：电商平台商品销量精准预测（时间序列预测模型）</h3>
      <h4 className="text-lg font-semibold mb-1">1. 问题背景描述：</h4>
      <p className="mb-4">
        一家中小型电子商务网店希望能够准确预测其核心主打产品在未来一周乃至一个月的每日销量。实现精准的销量预测对于网店运营至关重要，它可以帮助店主更有效地管理库存（避免缺货造成的销售损失或库存积压占用的资金），更精准地制定营销推广策略（如在预测销量高峰期加大广告投入），以及优化供应链和物流安排。
      </p>
      <h4 className="text-lg font-semibold mb-1">2. LLM在建模过程中的辅助角色与演示：</h4>
      <ul className="list-disc list-inside space-y-2 ml-4 mb-4">
        <li>
          <strong>辅助问题理解与数据探索方向建议</strong>：
          <p className="mt-1">
            <strong>向LLM提问</strong>：“我计划对一款核心产品的未来销量进行预测。目前我手头拥有的数据包括过去一整年的每日销售记录，以及一些可能影响销量的外部因素，比如是否为法定节假日、是否有正在进行的促销活动（如打折、满减）等。在正式开始构建预测模型之前，我应该对这些数据进行哪些必要的探索性分析（EDA）呢？”<br />
            <strong>LLM可能的回答与启发性提示</strong>：LLM可能会系统地建议一系列数据探索步骤。例如，检查销量数据是否存在明显的长期趋势性（Trend，如销量是整体上升还是下降）、季节性（Seasonality，如每周、每月或每季度是否有固定的波动模式）、以及更长期的周期性（Cyclicity）。它还会提示需要关注数据中是否存在异常值或缺失值，并建议如何处理。同时，LLM会强调分析促销活动、节假日等外部因素与历史销量之间的相关性，例如通过可视化手段（如箱线图、分组聚合统计）来初步判断这些因素对销量的影响程度。
          </p>
        </li>
        <li>
          <strong>辅助模型选择与比较</strong>：
          <p className="mt-1">
            <strong>向LLM提问</strong>：“对于这种带有时间序列特性的销量预测问题，有哪些比较常用且效果较好的预测模型或算法可以考虑？能否简要介绍一下它们各自的优缺点以及主要适用场景？”<br />
            <strong>LLM可能的回答与启发性建议</strong>：LLM可能会列举并对比多种模型。传统的时间序列模型可能包括：ARIMA（自回归积分滑动平均模型）、SARIMA（季节性ARIMA）、指数平滑法（如Holt-Winters方法）等，并指出它们对数据平稳性有要求，擅长捕捉线性趋势和固定季节性。机器学习模型方面，LLM可能推荐：LSTM（长短期记忆网络，一种递归神经网络，擅长处理复杂非线性时间序列）、Prophet（Facebook开源的预测工具，对节假日效应和趋势变化处理较好）、XGBoost/LightGBM（梯度提升决策树，可以将时间序列问题转化为监督学习问题，并能有效融入多种外部特征）等，并说明这些模型通常对数据量有一定要求，且模型解释性可能不如传统模型直观。
          </p>
        </li>
        <li>
          <strong>辅助特征工程与构建</strong>：
          <p className="mt-1">
            <strong>向LLM提问</strong>：“我的原始数据主要包含日期、当天的销量、以及一个布尔值表示当天是否有促销活动。为了尽可能提高销量预测的准确性，我还可以从现有数据中构造出哪些可能更有价值的衍生特征（Feature Engineering）？”<br />
            <strong>LLM可能的回答与启发性建议</strong>：LLM可能会提出一系列特征构建的思路。例如：创建更多与时间相关的特征（如：星期几、是否为周末、月份、季度、年份中的第几周、距离重要节假日的远近等）；构造滞后特征（Lag Features，如：前一天的销量、前7天的平均销量等，用以捕捉自相关性）；创建移动平均特征（Moving Average Features，如过去7天或30天的销量滑动平均值，用以平滑短期波动）；以及将分类变量（如促销类型、节假日类型）通过独热编码（One-Hot Encoding）或标签编码（Label Encoding）等方式转化为数值特征，以便机器学习模型使用。
          </p>
        </li>
        <li>
          <strong>辅助代码生成（例如使用Python及相关库如Pandas、Scikit-learn、Statsmodels、TensorFlow/Keras等）</strong>：
          <p className="mt-1">
            <strong>向LLM提问</strong>：“我初步决定尝试使用ARIMA模型来进行销量预测。您能否提供一个使用Python编程语言，并结合Pandas进行数据处理、Statsmodels库进行ARIMA模型构建的标准化代码流程？这个流程最好能包括数据加载、时间序列平稳性检验（如ADF检验）、模型定阶（如观察ACF/PACF图）、模型拟合、未来销量预测以及常用模型评估指标（如RMSE、MAE、MAPE）的计算。”<br />
            <strong>LLM可能的辅助输出</strong>：LLM能够生成一段相对完整的Python代码脚本。该脚本会演示如何：使用Pandas加载和预处理时间序列数据（如设置日期索引、处理缺失值）；使用Statsmodels库中的<code>adfuller</code>函数进行单位根检验以判断序列平稳性；如果非平稳，则进行差分操作；绘制ACF（自相关函数）和PACF（偏自相关函数）图以辅助确定ARIMA模型的p, d, q参数；使用<code>ARIMA</code>类拟合模型；使用拟合好的模型进行未来多步预测；最后，计算并展示如均方根误差（RMSE）、平均绝对误差（MAE）、平均绝对百分比误差（MAPE）等评估指标，用以衡量模型的预测性能。
          </p>
        </li>
        <li>
          <strong>辅助结果解释与模型迭代建议</strong>：
          <p className="mt-1">
            <strong>向LLM提问</strong>：“我运行了您提供的ARIMA模型代码，得到的预测结果显示，均方根误差（RMSE）是50个单位，平均绝对百分比误差（MAPE）是15%。这个预测精度对于我的业务来说算好还是不好？我应该如何进一步分析和改进这个模型以获得更准确的预测？”<br />
            <strong>LLM可能的回答与启发性分析</strong>：LLM可以首先帮助解释这些评估指标的含义及其在具体业务场景下的解读（例如，RMSE为50意味着平均预测误差的量级，MAPE为15%意味着预测值平均偏离真实值的百分比）。然后，它可能会提示用户，模型的好坏是相对的，需要结合业务容忍度来判断。针对模型改进，LLM可能建议：尝试不同的ARIMA模型参数组合（p,d,q）；如果数据有明显季节性，应改用SARIMA模型；检查残差序列是否为白噪声，以判断模型是否充分提取了信息；尝试之前讨论过的其他模型类型（如机器学习模型），并进行性能对比；考虑加入更多相关的外部影响因素作为特征（如竞争对手活动、天气数据、宏观经济指标等）；或者进行更细致的数据清洗和异常值处理。
          </p>
        </li>
      </ul>
      <h4 className="text-lg font-semibold mb-1">3. LLM在此案例中的核心价值体现：</h4>
      <ul className="list-disc list-inside ml-4 mb-4">
        <li><strong>提供系统性的数据分析和特征工程思路</strong>：帮助用户全面考虑数据特性，挖掘潜在有效信息。</li>
        <li><strong>介绍并对比多种可选的预测模型及其特点</strong>：拓宽用户在模型选择上的视野，辅助做出更合适的决策。</li>
        <li><strong>高效生成数据处理和模型训练的标准化代码框架</strong>：大幅降低编程门槛和时间成本，加速模型迭代过程。</li>
        <li><strong>辅助理解复杂的模型评估指标和提供针对性的模型改进方向</strong>：帮助用户更好地解读模型结果，并指导后续的优化工作。</li>
      </ul>

      <h3 className="text-xl font-semibold mt-6 mb-2">案例三：辅助理解复杂数学概念在建模中的应用（概念性与教学性演示）</h3>
      <h4 className="text-lg font-semibold mb-1">1. 问题背景描述：</h4>
      <p className="mb-4">
        一位正在学习流行病学或系统动力学建模的学生，在接触经典的传染病模型（例如SIR模型：易感者-感染者-康复者模型）时，对于模型中的核心参数——“基本再生数R0”（Basic Reproduction Number）——的深层数学意义、实际公共卫生影响以及其在模型动态行为中的关键作用，理解不够透彻和直观。该学生希望借助LLM的辅助，不仅能深入理解R0的内涵，还能进一步思考如何在更复杂的现实场景下（例如，当需要考虑疫苗接种策略、社交距离措施、病毒变异等多种因素时）对基础的SIR模型进行扩展和修正。
      </p>
      <h4 className="text-lg font-semibold mb-1">2. LLM在辅助理解与模型扩展中的角色与演示：</h4>
      <ul className="list-disc list-inside space-y-2 ml-4 mb-4">
        <li>
          <strong>辅助复杂概念的解释与生动类比</strong>：
          <p className="mt-1">
            <strong>向LLM提问</strong>：“请您用尽可能通俗易懂且生动的语言，向我解释一下传染病SIR模型中的‘基本再生数R0’究竟是什么意思？它为什么在流行病学研究和疫情防控中如此重要？”<br />
            <strong>LLM可能的回答与启发性解释</strong>：LLM可以用非常形象的例子来解释R0的含义，例如：“想象在一个没有任何免疫力且没有采取任何干预措施的人群中，一个最初的感染者，在他整个感染期间，平均能够成功传染给多少个新的易感者，这个数量就是R0。” LLM会进一步阐释R0的阈值效应：当R0 {'>'} 1时，意味着每个感染者平均会传染给一个以上的新病例，疫情将会持续蔓延和扩大；当R0 {'<'} 1时，每个感染者平均传染给不到一个新病例，疫情则会逐渐得到控制并最终消退；而当R0 = 1时，疫情可能会以地方病的形式持续存在。LLM还会强调R0是评估疾病传播潜力和制定防控策略（如疫苗接种覆盖率目标）的关键指标。
          </p>
        </li>
        <li>
          <strong>辅助理解数学推导的逻辑与步骤</strong>：
          <p className="mt-1">
            <strong>向LLM提问</strong>：“基本再生数R0通常是如何从SIR模型的微分方程组中数学推导出来的？能否简要概述一下关键的推导步骤和所依赖的核心假设？”<br />
            <strong>LLM可能的回答与启发性概述</strong>：LLM可以概述R0的推导过程。例如，它会指出推导通常关注疫情爆发的初期阶段，此时几乎所有人都是易感者（S ≈ N，N为总人口）。然后，通过对SIR模型的感染者（I）动态方程进行线性化处理（忽略高阶项），分析系统在疾病引入点的稳定性，或者使用下一代矩阵方法（Next Generation Matrix method）来计算。LLM会点出R0的表达式通常与模型中的传染率（β）、感染者平均恢复率（γ，即感染期的倒数）以及易感人群比例等参数直接相关（例如，在最简单的SIR模型中，R0 = βN/γ 或在S0 ≈ N时简化为 β/γ，取决于模型的具体形式和参数定义）。
          </p>
        </li>
        <li>
          <strong>启发模型扩展与修正的创新思路</strong>：
          <p className="mt-1">
            <strong>向LLM提问</strong>：“如果我现在想在基础的SIR模型中引入大规模疫苗接种的影响，我应该如何修改原有的模型方程组？这种修改会对基本再生数R0（或者说有效再生数Rt）产生怎样的影响？”<br />
            <strong>LLM可能的回答与启发性建议</strong>：LLM可能会建议在模型中引入一个新的仓室，例如“已免疫者”（V, Vaccinated and Immune）。然后，需要修改易感人群（S）的变化方程，加入一个由于疫苗接种而从S转移到V的项。LLM会解释，疫苗接种的直接影响是减少了易感人群的规模，从而间接降低了有效再生数Rt。它甚至可以引导用户思考如何量化疫苗的有效性（不是100%有效）、接种速率等因素在模型中的表达。
          </p>
        </li>
      </ul>
    </div>
  );
};

export default Examples;

